name: CI
on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  static-tests:
    name: Static tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Linting
        run: npm run lint

      - name: Typescript checking
        run: npm run tsc

  integration-tests:
    name: Integration tests
    runs-on: ubuntu-latest
    needs: static-tests

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Start database and firebase emulators
        run: docker compose up -d --build

      - name: Wait for database start...
        run: ./docker/wait-for-db.sh

      - name: Execute tests
        run: npm test

      - name: Stop database and firebase emulators
        if: always()
        run: docker compose down

  e2e-tests:
    name: E2E tests
    runs-on: ubuntu-latest
    needs: static-tests
    timeout-minutes: 20

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'

      - name: Start database and firebase emulators
        run: docker compose up -d --build

      - name: Wait for database start...
        run: ./docker/wait-for-db.sh

      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          build: npx dotenv -e .env.test -- npm run build
          start: |
            npx dotenv -e .env.test -- npm run test:db
            npx dotenv -e .env.test -- npm run serve:ci
          command-prefix: 'dotenv -e .env.test --'
          wait-on: 'http://localhost:3001'

      - name: Stop database and firebase emulators
        if: always()
        run: docker compose down
