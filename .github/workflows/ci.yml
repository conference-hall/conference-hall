name: CI
on:
  pull_request:
  push:
    branches:
      - main
      - production

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ !contains(github.ref, 'main') && !contains(github.ref, 'production') }}

jobs:
  static-tests:
    name: Static tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Linting
        run: npm run lint:ci

      - name: Typescript checking
        run: npm run tsc

      - name: Knip checking
        run: npm run knip

  integration-tests:
    name: Integration tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup Playwright
        uses: ./.github/actions/setup-playwright

      - name: Start database and firebase emulators
        run: docker compose up -d --build

      - name: Wait for database start...
        run: ./docker/wait-for-db.sh

      - name: Execute tests
        run: npm test

      - name: Stop database and firebase emulators
        if: always()
        run: docker compose down

  e2e-tests:
    name: E2E tests (${{ matrix.shardIndex }}/${{ matrix.shardTotal }})
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [1, 2]
        shardTotal: [2]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup Playwright
        uses: ./.github/actions/setup-playwright

      - name: Start database and firebase emulators
        run: docker compose up -d --build

      - name: Wait for database start...
        run: ./docker/wait-for-db.sh

      - name: Build the app
        run: npm run build

      - name: Run e2e tests
        run: npm run test:e2e -- --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}

      - name: Stop database and firebase emulators
        if: always()
        run: docker compose down
